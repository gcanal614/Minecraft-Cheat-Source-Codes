package me.mees.remix.modules.exploit;

import me.satisfactory.base.module.*;
import me.satisfactory.base.events.*;
import net.minecraft.potion.*;
import java.util.*;
import pw.stamina.causam.scan.method.model.*;

public class PotionSaver extends Module
{
    private boolean canStop;
    private int goodPotions;
    private int badPotions;
    
    public PotionSaver() {
        super("PotionSaver", 0, Category.EXPLOITS);
    }
    
    @Subscriber
    public void EventMotion(final EventMotion event) {
        if (event.getType() == 0) {
            final Collection<PotionEffect> collection = (Collection<PotionEffect>)PotionSaver.mc.thePlayer.getActivePotionEffects();
            this.canStop = (!PotionSaver.mc.thePlayer.isMoving() && collection.size() > 0 && !PotionSaver.mc.thePlayer.isUsingItem() && !PotionSaver.mc.thePlayer.isSwingInProgress && !event.isRotating());
            for (final PotionEffect potioneffect : collection) {
                final Potion potion = Potion.potionTypes[potioneffect.getPotionID()];
                if (potion.isUsable()) {
                    ++this.goodPotions;
                }
                else {
                    if (!potion.isBadEffect()) {
                        continue;
                    }
                    ++this.badPotions;
                }
            }
            event.setCancelled(this.shouldStopPotion());
            if (!this.canStop) {
                this.goodPotions = 0;
                this.badPotions = 0;
            }
        }
    }
    
    @Override
    public void onDisable() {
        super.onDisable();
        this.canStop = false;
        this.goodPotions = 0;
        this.badPotions = 0;
    }
    
    public boolean shouldStopPotion() {
        return this.goodPotions >= this.badPotions && this.canStop;
    }
}
