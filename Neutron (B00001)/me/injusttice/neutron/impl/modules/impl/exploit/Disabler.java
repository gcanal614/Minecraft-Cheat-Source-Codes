package me.injusttice.neutron.impl.modules.impl.exploit;

import me.injusttice.neutron.api.events.impl.EventNigger;
import me.injusttice.neutron.api.events.impl.EventSendPacket;
import me.injusttice.neutron.api.events.impl.UpdateEvent;
import me.injusttice.neutron.NeutronMain;
import me.injusttice.neutron.api.events.EventTarget;
import me.injusttice.neutron.impl.modules.Category;
import me.injusttice.neutron.impl.modules.Module;
import me.injusttice.neutron.api.settings.impl.ModeSet;
import me.injusttice.neutron.utils.network.PacketUtil;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

import me.injusttice.neutron.utils.player.Timer;
import me.injusttice.neutron.api.events.impl.EventReceivePacket;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import net.minecraft.util.ChatComponentText;
import net.minecraft.util.EnumChatFormatting;

public class Disabler extends Module {

    public ModeSet modes = new ModeSet("Mode", "Verus Combat", "Verus Combat", "Latest Verus", "Old Verus", "Verus", "Hypixel", "LatinPlay", "VAC");

    public static ArrayList<Packet> packets = new ArrayList<>();
    private final Timer packetTimer;
    private LinkedList<Packet> packetQueue;
    private List<Packet> packetList;
    ArrayList<Packet> transactions;
    public boolean isDisabling;
    int currentTransaction;
    private Timer timer;
    Timer disableTime;

    public Disabler() {
        super("Disabler", 0, Category.EXPLOIT);
        packetQueue = new LinkedList<>();
        packetList = new ArrayList<>();
        packetTimer = new Timer();
        transactions = new ArrayList<>();
        disableTime = new Timer();
        currentTransaction = 0;
        timer = new Timer();
        isDisabling = false;
        addSettings(modes);
    }

    @Override
    public void onEnable() {
        super.onEnable();
        if(modes.is("LatinPlay")) {
            NeutronMain.addChatMessage("Please wait 10 seconds..");
            isDisabling = true;
        }
        disableTime.reset();
        packetQueue.clear();
        timer.reset();
    }

    @Override
    public void onDisable() {
        super.onDisable();
        isDisabling = false;
        mc.timer.timerSpeed = 1.0F;
        currentTransaction = 0;
        transactions.clear();
        packetQueue.clear();
        packetList.clear();
        packets.clear();
    }

    @EventTarget
    public void onEvent(EventNigger e) {
        if (e instanceof UpdateEvent) {
            if(e.isPre()) {
                setDisplayName("Disabler ยง7" + modes.getMode());
                switch (modes.getMode()) {
                    case "LatinPlay":
                        if (isDisabling && disableTime.hasReached(10000L)) {
                            NeutronMain.addChatMessage("Disabler is unstable for now ");
                            isDisabling = false;
                        }
                        if (mc.thePlayer.ticksExisted < 5 && packets.size() > 0) {
                            packets.clear();
                        }
                        if (packetTimer.hasTimeElapsed(1000L, true)) {
                            while (packets.size() > 0) {
                                PacketUtil.sendPacketSilent(packets.remove(0));
                            }
                            packetTimer.reset();
                        }
                        break;
                    case "Latest Verus":
                        if (timer.hasReached((long) 490.0F)) {
                            if (!packetQueue.isEmpty())
                                PacketUtil.sendPacketSilent(packetQueue.poll());
                            timer.reset();
                        }
                        break;
                    case "Old Verus":
                        if (mc.thePlayer.ticksExisted % 120 == 0 && transactions.size() > currentTransaction)
                            mc.thePlayer.sendQueue.addToSilentQueue(transactions.get(currentTransaction++));
                        if (mc.thePlayer.ticksExisted % 40 == 0)
                            mc.thePlayer.sendQueue.addToSilentQueue(new C03PacketPlayer.C06PacketPlayerPosLook(mc.thePlayer.posX, mc.thePlayer.posY - 11.0D, mc.thePlayer.posZ, mc.thePlayer.rotationYaw, mc.thePlayer.rotationPitch, true));
                        if (mc.thePlayer.ticksExisted % 300 == 0) {
                            packetQueue.clear();
                            packetList.clear();
                        }
                        break;
                    case "Verus Combat":
                        if (this.mc.thePlayer.ticksExisted % 180 == 0) {
                            while (this.packetQueue.size() > 22) {
                                PacketUtil.sendPacketSilent(this.packetQueue.get(0));
                                this.packetQueue.remove(0);
                            }
                            break;
                        }
                        break;
                    case "Verus":
                        if (mc.thePlayer == null || mc.thePlayer.ticksExisted == 0) {
                            packetQueue.clear();
                            return;
                        }
                        if (mc.thePlayer.ticksExisted % 45 == 0) {
                            PacketUtil.sendPacketSilent(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true));
                            PacketUtil.sendPacketSilent(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY - 15299.725D, mc.thePlayer.posZ, false));
                            PacketUtil.sendPacketSilent(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true));
                        }
                        if (mc.thePlayer.ticksExisted % 180 == 0)
                            while (packetQueue.size() > 22)
                                PacketUtil.sendPacketSilent(packetQueue.poll());
                        break;
                }
            }
        }
    }

    @EventTarget
    public void onReceive(EventReceivePacket e) {
        switch (modes.getMode()) {
            case "Dynamic PvP":
            case "Verus":
                if (e.getPacket() instanceof S08PacketPlayerPosLook) {
                    mc.thePlayer.addChatMessage(new ChatComponentText(EnumChatFormatting.LIGHT_PURPLE + "Disabler" + EnumChatFormatting.GRAY + " > " + EnumChatFormatting.WHITE + "You can fly now"));
                    S08PacketPlayerPosLook packet = (S08PacketPlayerPosLook)e.getPacket();
                    double x = packet.getX() - mc.thePlayer.posX;
                    double y = packet.getY() - mc.thePlayer.posY;
                    double z = packet.getZ() - mc.thePlayer.posZ;
                    double diff = Math.sqrt(x * x + y * y + z * z);
                    if (diff <= 7.0D) {
                        PacketUtil.sendPacketSilent(new C03PacketPlayer.C06PacketPlayerPosLook(packet.getX(), packet.getY(), packet.getZ(), packet.getYaw(), packet.getPitch(), true));
                        e.setCancelled(true);
                    }
                }
                break;
        }
    }

    @EventTarget
    public void onSend(EventSendPacket e) {
        switch (modes.getMode()) {
            case "LatinPlay":
                if (e.getPacket() instanceof C0FPacketConfirmTransaction) {
                    C0FPacketConfirmTransaction packet4 = (C0FPacketConfirmTransaction) e.getPacket();
                    if (packet4.getUid() < 0) {
                        packets.add(packet4);
                        e.setCancelled(true);
                    }
                } else if (e.getPacket() instanceof C00PacketKeepAlive) {
                    packets.add(e.getPacket());
                    e.setCancelled(true);
                }
                break;
            case "VAC":
                if (e.getPacket() instanceof C13PacketPlayerAbilities) {
                    C13PacketPlayerAbilities c13 = (C13PacketPlayerAbilities)e.getPacket();
                    c13.setAllowFlying(true);
                    c13.setCreativeMode(true);
                    c13.setFlying(true);
                    c13.setFlySpeed(Float.NaN);
                    c13.setInvulnerable(true);
                    c13.setWalkSpeed(Float.NaN);
                }
                if (mc.thePlayer != null) {
                    if (mc.thePlayer.ticksExisted % 150 == 0) {
                        if (e.getPacket() instanceof C03PacketPlayer) {
                            C03PacketPlayer c03 = (C03PacketPlayer) e.getPacket();
                            c03.y = -100.18D;
                        }
                    }
                }
                break;
            case "Verus":
                if (e.getPacket() instanceof C0FPacketConfirmTransaction) {
                    for (int i = 0; i < 4; i++)
                        packetQueue.add(e.getPacket());
                    e.setCancelled(true);
                }
                if (e.getPacket() instanceof C03PacketPlayer && mc.thePlayer.ticksExisted > 15)
                    e.setCancelled((mc.thePlayer.ticksExisted % 3 == 0));
                break;
            case "Latest Verus":
                if (e.getPacket() instanceof C0FPacketConfirmTransaction) {
                    C0FPacketConfirmTransaction c0fPacketConfirmTransaction = (C0FPacketConfirmTransaction)e.getPacket();
                    packetQueue.add(c0fPacketConfirmTransaction);
                    e.setCancelled(true);
                }
                if (e.getPacket() instanceof C03PacketPlayer) {
                    C03PacketPlayer c03 = (C03PacketPlayer)e.getPacket();
                    if (mc.thePlayer.ticksExisted % 40 == 0) {
                        c03.y = -0.911D;
                        c03.onGround = false;
                        c03.moving = false;
                    }
                }
                if (mc.thePlayer != null && mc.thePlayer.ticksExisted <= 7) {
                    timer.reset();
                    packetQueue.clear();
                }
                break;
            case "Old Verus":
                if (e.getPacket() instanceof C0FPacketConfirmTransaction) {
                    packets.add(e.getPacket());
                    e.setCancelled(true);
                }
                if (e.getPacket() instanceof C00PacketKeepAlive) {
                    mc.thePlayer.sendQueue.addToSilentQueue(new C00PacketKeepAlive(((C00PacketKeepAlive)e.getPacket()).key - 1));
                    e.setCancelled(true);
                }
                if (e.getPacket() instanceof C03PacketPlayer)
                    mc.thePlayer.sendQueue.addToSilentQueue(new C0CPacketInput());
                break;
            case "Verus Combat":
                if (e.getPacket() instanceof C00PacketKeepAlive) {
                    e.setCancelled(true);
                    this.packetQueue.add(e.getPacket());
                }
                if (e.getPacket() instanceof C0FPacketConfirmTransaction) {
                    this.packetQueue.add(e.getPacket());
                    e.setCancelled(true);
                }
                if (e.getPacket() instanceof C0BPacketEntityAction) {
                    e.setCancelled(true);
                }
                break;
        }
    }
}
