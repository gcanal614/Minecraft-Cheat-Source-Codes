package tk.rektsky.Module.Exploits;

import tk.rektsky.Module.*;
import tk.rektsky.Module.Settings.*;
import net.minecraft.world.*;
import net.minecraft.entity.*;
import tk.rektsky.Event.*;
import tk.rektsky.Utils.*;
import net.minecraft.network.play.client.*;
import tk.rektsky.Event.Events.*;
import net.minecraft.network.*;
import net.minecraft.network.play.server.*;
import net.minecraft.client.entity.*;

public class FreeCam extends Module
{
    public DoubleSetting speedSetting;
    public double oldX;
    public double oldY;
    public double oldZ;
    public float oldYaw;
    public float oldPitch;
    public EntityOtherPlayerMP player;
    
    public FreeCam() {
        super("FreeCam", "Allowed you fly around your body like a ghost", Category.EXPLOIT);
        this.speedSetting = new DoubleSetting("Speed", 0.1, 10.0, 2.0);
        this.oldX = 0.0;
        this.oldY = 0.0;
        this.oldZ = 0.0;
        this.oldYaw = 0.0f;
        this.oldPitch = 0.0f;
    }
    
    @Override
    public void onEnable() {
        this.oldX = this.mc.thePlayer.posX;
        this.oldY = this.mc.thePlayer.posY;
        this.oldZ = this.mc.thePlayer.posZ;
        this.oldYaw = this.mc.thePlayer.rotationYaw;
        this.oldPitch = this.mc.thePlayer.rotationPitch;
        (this.player = new EntityOtherPlayerMP(this.mc.theWorld, this.mc.thePlayer.getGameProfile())).copyLocationAndAnglesFrom(this.mc.thePlayer);
        this.player.rotationYawHead = this.mc.thePlayer.rotationYawHead;
        this.player.renderYawOffset = this.mc.thePlayer.renderYawOffset;
        this.mc.theWorld.addEntityToWorld(-6969, this.player);
        this.mc.thePlayer.noClip = true;
    }
    
    @Override
    public void onDisable() {
        this.mc.thePlayer.setPosition(this.oldX, this.oldY, this.oldZ);
        this.mc.thePlayer.rotationYaw = this.oldYaw;
        this.mc.thePlayer.rotationPitch = this.oldPitch;
        this.mc.thePlayer.motionX = 0.0;
        this.mc.thePlayer.motionY = 0.0;
        this.mc.thePlayer.motionZ = 0.0;
        this.mc.theWorld.removeEntity(this.player);
        this.player = null;
    }
    
    @Override
    public void onEvent(final Event event) {
        if (event instanceof WorldTickPostEvent) {
            this.mc.thePlayer.noClip = true;
            this.mc.thePlayer.fallDistance = 0.0f;
            this.mc.thePlayer.motionX = 0.0;
            this.mc.thePlayer.motionY = 0.0;
            this.mc.thePlayer.motionZ = 0.0;
            MovementUtil.strafe(1.0);
            if (this.mc.gameSettings.keyBindJump.isKeyDown()) {
                final EntityPlayerSP thePlayer = this.mc.thePlayer;
                thePlayer.motionY += 0.5;
            }
            if (this.mc.gameSettings.keyBindSneak.isKeyDown()) {
                final EntityPlayerSP thePlayer2 = this.mc.thePlayer;
                thePlayer2.motionY -= 0.5;
            }
        }
        if (event instanceof PacketSentEvent && (((PacketSentEvent)event).getPacket() instanceof C03PacketPlayer || ((PacketSentEvent)event).getPacket() instanceof C0BPacketEntityAction)) {
            ((PacketSentEvent)event).setCanceled(true);
        }
        if (event instanceof ClientTickEvent && (this.mc.theWorld == null || !this.mc.isInGame())) {
            this.rawSetToggled(false);
        }
        if (event instanceof PacketReceiveEvent) {
            if (((PacketReceiveEvent)event).getPacket() instanceof S08PacketPlayerPosLook) {
                this.oldX = ((S08PacketPlayerPosLook)((PacketReceiveEvent)event).getPacket()).getX();
                this.oldY = ((S08PacketPlayerPosLook)((PacketReceiveEvent)event).getPacket()).getY();
                this.oldZ = ((S08PacketPlayerPosLook)((PacketReceiveEvent)event).getPacket()).getZ();
                this.oldYaw = ((S08PacketPlayerPosLook)((PacketReceiveEvent)event).getPacket()).yaw;
                this.oldPitch = ((S08PacketPlayerPosLook)((PacketReceiveEvent)event).getPacket()).pitch;
                this.player.posX = this.oldX;
                this.player.posY = this.oldY;
                this.player.posZ = this.oldZ;
                this.player.rotationYaw = this.oldYaw;
                this.player.rotationPitch = this.oldPitch;
                ((PacketReceiveEvent)event).setCanceled(true);
                this.mc.getNetHandler().addToSendQueueSilent(new C03PacketPlayer.C06PacketPlayerPosLook(this.oldX, this.oldY, this.oldZ, this.oldYaw, this.oldPitch, false));
            }
            if (((PacketReceiveEvent)event).getPacket() instanceof S07PacketRespawn) {
                this.rawSetToggled(false);
            }
            if (((PacketReceiveEvent)event).getPacket() instanceof S12PacketEntityVelocity) {
                final EntityOtherPlayerMP player = this.player;
                player.motionY += 4.0;
            }
        }
    }
}
