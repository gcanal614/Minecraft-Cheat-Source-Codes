package wtf.monsoon.impl.modules.exploit;

import java.util.concurrent.CopyOnWriteArrayList;

import javax.vecmath.Vector3f;

import org.lwjgl.input.Keyboard;

import wtf.monsoon.api.event.EventTarget;
import wtf.monsoon.api.event.impl.EventSendPacket;
import wtf.monsoon.api.event.impl.EventUpdate;
import wtf.monsoon.api.module.Category;
import wtf.monsoon.api.module.Module;
import wtf.monsoon.api.util.misc.Timer;
import net.minecraft.client.Minecraft;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C03PacketPlayer;
import wtf.monsoon.api.Wrapper;

public class Blink extends Module {
	
	Timer timer = new Timer();

	private boolean blinking;
	
	private CopyOnWriteArrayList<Packet> savedPackets = new CopyOnWriteArrayList<Packet>();
	private Vector3f firstPosition;
	
	
	public Blink() {
		super("Blink", "Stop sending packets to the Server.", Keyboard.KEY_NONE, Category.EXPLOIT);
	}
	
	
	@EventTarget
	public void onSendPacket(EventSendPacket e) {
		Packet packet = ((EventSendPacket) e).getPacket();
		
		if(packet instanceof C03PacketPlayer && blinking) {
			savedPackets.add(packet);
			e.setCancelled(true);
		}
	}
			
	@EventTarget
	public void onUpdate(EventUpdate e) {

		this.setSuffix(savedPackets.size() + "");
		float x = (float) Wrapper.mc.thePlayer.posX - firstPosition.x;
		float y = (float) Wrapper.mc.thePlayer.posY - firstPosition.y;
		float z = (float) Wrapper.mc.thePlayer.posZ - firstPosition.z;
		
		
		timer.reset();
		if(timer.hasTimeElapsed(3000,false))
		{
            Minecraft.getMinecraft().thePlayer.sendQueue.addToSendQueue
            (
            	new C03PacketPlayer.C06PacketPlayerPosLook
            	(
            		Minecraft.getMinecraft().thePlayer.posX,
            		Minecraft.getMinecraft().thePlayer.posY,
            		Minecraft.getMinecraft().thePlayer.posZ,
            		Minecraft.getMinecraft().thePlayer.rotationYaw,
            		Minecraft.getMinecraft().thePlayer.rotationPitch,
            		Minecraft.getMinecraft().thePlayer.onGround
            	)
            );
			timer.reset();
		}
	
	}


	
	@Override
	public void onEnable() {
		super.onEnable();
		blinking = true;
		//NotificationManager.show(new Notification(NotificationType.INFO, "Blink", "Now blinking.", 1));
		//Monsoon.sendMessage("enable blink");
		if(Wrapper.mc.thePlayer != null){
			firstPosition = new Vector3f((float) Wrapper.mc.thePlayer.posX, (float) Wrapper.mc.thePlayer.posY, (float) Wrapper.mc.thePlayer.posZ);
		}
	}
	
	@Override
	public void onDisable() {
		super.onDisable();
		//NotificationManager.show(new Notification(NotificationType.INFO, "Blink", "No longer blinking.", 1));
		//Monsoon.sendMessage("disable blink");
		this.stopBlink();
	}

	public void startBasicBlink(EventSendPacket e) {
		if (e.getPacket() instanceof C03PacketPlayer) {
			e.setCancelled(true);
		}
	}

	public void stopBlink() {
		for(Packet packet : savedPackets){
			Wrapper.mc.thePlayer.sendQueue.addToSendQueue(packet);
		}
		savedPackets.clear();
		blinking = false;
	}
	
}
