package today.sleek.client.modules.impl.exploit.disabler.verus

import net.minecraft.network.Packet
import today.sleek.base.event.impl.BlockCollisionEvent
import today.sleek.base.event.impl.MoveEvent
import today.sleek.base.event.impl.PacketEvent
import today.sleek.base.event.impl.UpdateEvent
import today.sleek.client.modules.impl.exploit.disabler.DisablerMode
import today.sleek.client.utils.math.Stopwatch

class OldVerus: DisablerMode("Old Verus") {

    var list = mutableListOf<Packet<*>>()
    var dummieBool = false
    var dummieBool2 = false
    var dummieBool3 = false
    var dummieDouble = 0.0
    var dummieDouble2 = 0.0
    var dummieDouble3 = 0.0
    var dummieInt = 0
    val stopwatch = Stopwatch()

    override fun onUpdate(event: UpdateEvent?) {
        super.onUpdate(event)
    }

    override fun onPacket(event: PacketEvent?) {

    }

    override fun onMove(event: MoveEvent?) {
        super.onMove(event)
    }

    override fun onCollide(event: BlockCollisionEvent?) {
        super.onCollide(event)
    }

    override fun onEnable() {
        stopwatch.resetTime()
    }

    override fun onDisable() {
        super.onDisable()
    }
}