package wtf.astronicy.IMPL.module.impl.exploit;

import net.minecraft.entity.player.PlayerCapabilities;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import wtf.astronicy.API.events.api.basicbus.api.annotations.Listener;
import wtf.astronicy.API.events.game.RespawnEvent;
import wtf.astronicy.API.events.packet.PacketEvent;
import wtf.astronicy.API.events.packet.ReceivePacketEvent;
import wtf.astronicy.API.events.packet.SendPacketEvent;
import wtf.astronicy.API.events.player.MotionUpdateEvent;
import wtf.astronicy.IMPL.module.ModuleCategory;
import wtf.astronicy.IMPL.module.impl.Module;
import wtf.astronicy.IMPL.module.options.Option;
import wtf.astronicy.IMPL.module.options.impl.EnumOption;
import wtf.astronicy.IMPL.module.registery.Aliases;
import wtf.astronicy.IMPL.module.registery.Category;
import wtf.astronicy.IMPL.module.registery.ModName;
import wtf.astronicy.IMPL.utils.TimerUtility;
import wtf.astronicy.UIs.Notifications.NotificationManager;

import java.util.LinkedList;
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.concurrent.CopyOnWriteArrayList;

import static wtf.astronicy.API.Utils.impl.Player.ExploitUtil.*;

@ModName("Disabler")
@Aliases({"disabler", "memer"})
@Category(ModuleCategory.EXPLOIT)
public class Disabler1 extends Module {

    /**
     * TODO: Instances
     */
    public LinkedList<Packet> packetList;
    public PlayerCapabilities cap = new PlayerCapabilities();
    public int ticks;

    /**
     * TODO: Settings
     */
    public EnumOption disablerMode = new EnumOption("Disabler", DisablerModes.Hypixel); public enum DisablerModes{ Hypixel, Verus }

    public Disabler1(){
        this.addOptions(new Option[]{disablerMode});
    }

    @Listener(RespawnEvent.class)
    public void onLoadWorld(RespawnEvent event) {
        switch ((DisablerModes) disablerMode.getValue()) {
            case Hypixel:
                resetHypixel();
                break;
            case Verus:

                break;
        }
    }

    @Listener(PacketEvent.class)
    public void onSendPacket(PacketEvent e){
        antiExecute();
        switch ((DisablerModes)disablerMode.getValue()){
            case Hypixel:
                //disableWatchdogP1(e);
                break;
            case Verus:
                if (respawn()) {
                    packetList.clear();
                }
                int ticks = 20;
                if(e.isSending() && e.getPacket() instanceof C0FPacketConfirmTransaction){
                    System.out.println("C0F");
                    packetList.add(e.getPacket());
                    e.setCancelled(true);
                }
                if(packetList.size() > 20){
                    PacketUtils.sendPacketNoEvent(packetList.poll());
                }
                if (e.isSending() && e.getPacket() instanceof C08PacketPlayerBlockPlacement
                        || e.getPacket() instanceof C07PacketPlayerDigging) {
                    System.out.println("C08, C07");
                    if (mc.thePlayer.isUsingItem()) {
                        e.setCancelled();
                    }
                }
                if(e.isSending() && e.getPacket() instanceof C03PacketPlayer){
                    System.out.println("C03");
                    if (mc.thePlayer.ticksExisted % ticks == 0) {
                        C03PacketPlayer c03 = (C03PacketPlayer) e.getPacket();
                        c03.setY(c03.getPositionY() - Math.PI);
                        e.setCancelled();
                        System.out.println("Clip");
                        PacketUtils.sendPacketNoEvent(new C03PacketPlayer.C04PacketPlayerPosition(c03.getPositionX(), c03.getPositionY() - 17.1415, c03.getPositionZ(), true));
                    }

                }
                break;
        }
    }

    @Listener(PacketEvent.class)
    public void onReceivePack(PacketEvent e){
        antiExecute();
        switch ((DisablerModes)disablerMode.getValue()){
            case Hypixel:
                //disableWatchdogP2(e);
                break;
            case Verus:
                if (!e.isSending() && e.getPacket() instanceof S08PacketPlayerPosLook) {
                    System.out.println("S08");
                    S08PacketPlayerPosLook aaa = (S08PacketPlayerPosLook)e.getPacket();
                    double x = aaa.getX() - mc.thePlayer.posX;
                    double y = aaa.getY() - mc.thePlayer.posY;
                    double z = aaa.getZ() - mc.thePlayer.posZ;
                    double index = Math.sqrt(x * x + y * y + z * z);
                    if (index <= 8) {
                        e.setCancelled();
                        PacketUtils.sendPacketNoEvent(new C03PacketPlayer.C04PacketPlayerPosition(aaa.getX(), aaa.getY(), aaa.getZ(), true));
                    }
                }
                break;
        }
    }

    @Listener(MotionUpdateEvent.class)
    public void onMotionEvent(MotionUpdateEvent e) {
        antiExecute();
        switch ((DisablerModes)disablerMode.getValue()){
            case Hypixel:
                disableWatchdogP3(e);
                break;
            case Verus:
                break;
        }
    }

    public static boolean respawn(){
        return (mc.thePlayer != null && mc.thePlayer.ticksExisted <= 8);
    }

    public void antiExecute(){
        if (this.mc.thePlayer == null) {
            return;
        }
        if (this.mc.theWorld == null) {
            return;
        }
    }
}
