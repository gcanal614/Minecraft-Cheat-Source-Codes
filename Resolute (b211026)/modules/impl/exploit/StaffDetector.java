// 
// Decompiled by Procyon v0.5.36
// 

package vip.Resolute.modules.impl.exploit;

import java.io.IOException;
import org.apache.commons.io.FileUtils;
import java.net.URL;
import java.util.concurrent.CompletableFuture;
import com.google.gson.JsonObject;
import vip.Resolute.events.impl.EventMotion;
import vip.Resolute.events.Event;
import vip.Resolute.ui.notification.Notification;
import vip.Resolute.ui.notification.NotificationType;
import vip.Resolute.Resolute;
import vip.Resolute.settings.Setting;
import net.minecraft.client.Minecraft;
import vip.Resolute.settings.impl.NumberSetting;
import java.io.File;
import vip.Resolute.util.misc.TimerUtil;
import com.google.gson.Gson;
import vip.Resolute.modules.Module;

public class StaffDetector extends Module
{
    private final Gson gson;
    private final TimerUtil timer;
    public final File directory;
    public final File configDir;
    public int cachedBanCount;
    public NumberSetting delay;
    
    public StaffDetector() {
        super("StaffDetector", 0, "Detects staff and watchdog bans", Category.EXPLOIT);
        this.gson = new Gson();
        this.timer = new TimerUtil();
        this.directory = new File(Minecraft.getMinecraft().mcDataDir, "resolute");
        this.configDir = new File(this.directory, "API");
        this.delay = new NumberSetting("Delay in seconds", 30.0, 6.0, 60.0, 1.0);
        this.addSettings(this.delay);
    }
    
    @Override
    public void onEnable() {
        super.onEnable();
        if (Resolute.instance.api.equals("")) {
            Resolute.getNotificationManager().add(new Notification("Invalid API Key", "Provide a proper api key using .api", 5000L, NotificationType.WARNING));
            this.toggle();
        }
        this.cachedBanCount = 0;
        this.timer.reset();
    }
    
    @Override
    public void onEvent(final Event e) {
        if (e instanceof EventMotion && e.isPre() && this.timer.hasElapsed((long)(this.delay.getValue() * 1000.0))) {
            CompletableFuture.runAsync(new Runnable() {
                @Override
                public void run() {
                    try {
                        final JsonObject response = StaffDetector.this.getContents();
                        if (StaffDetector.this.cachedBanCount != 0) {
                            final int banned = response.get("staff_total").getAsInt() - StaffDetector.this.cachedBanCount;
                            if (banned != 0) {
                                Resolute.getNotificationManager().add(new Notification("Staff Analyser", "Staff banned " + banned + "players!", 6000L, NotificationType.WARNING));
                            }
                        }
                        StaffDetector.this.cachedBanCount = response.get("staff_total").getAsInt();
                    }
                    catch (Throwable $ex) {
                        throw $ex;
                    }
                }
            });
            this.timer.reset();
        }
    }
    
    private JsonObject getContents() {
        try {
            try {
                FileUtils.copyURLToFile(new URL("https://api.hypixel.net/watchdogStats?key=" + Resolute.instance.api), this.configDir, 2000, 1000);
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return (JsonObject)this.gson.fromJson(FileUtils.readFileToString(this.configDir), (Class)JsonObject.class);
        }
        catch (Throwable $ex) {
            throw $ex;
        }
    }
}
