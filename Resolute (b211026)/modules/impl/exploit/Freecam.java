// 
// Decompiled by Procyon v0.5.36
// 

package vip.Resolute.modules.impl.exploit;

import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.network.play.server.S12PacketEntityVelocity;
import net.minecraft.network.play.server.S07PacketRespawn;
import net.minecraft.network.Packet;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.client.C03PacketPlayer;
import vip.Resolute.events.impl.EventPacket;
import vip.Resolute.util.movement.MovementUtils;
import vip.Resolute.events.impl.EventUpdate;
import vip.Resolute.events.Event;
import net.minecraft.entity.Entity;
import net.minecraft.world.World;
import vip.Resolute.settings.Setting;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import vip.Resolute.settings.impl.NumberSetting;
import vip.Resolute.modules.Module;

public class Freecam extends Module
{
    public NumberSetting speed;
    public double oldX;
    public double oldY;
    public double oldZ;
    public float oldYaw;
    public float oldPitch;
    public EntityOtherPlayerMP player;
    
    public Freecam() {
        super("Freecam", 0, "Allows the player to freely look around", Category.EXPLOIT);
        this.speed = new NumberSetting("Speed", 2.0, 0.1, 10.0, 0.1);
        this.addSettings(this.speed);
    }
    
    @Override
    public void onEnable() {
        this.oldX = Freecam.mc.thePlayer.posX;
        this.oldY = Freecam.mc.thePlayer.posY;
        this.oldZ = Freecam.mc.thePlayer.posZ;
        this.oldYaw = Freecam.mc.thePlayer.rotationYaw;
        this.oldPitch = Freecam.mc.thePlayer.rotationPitch;
        (this.player = new EntityOtherPlayerMP(Freecam.mc.theWorld, Freecam.mc.thePlayer.getGameProfile())).copyLocationAndAnglesFrom(Freecam.mc.thePlayer);
        this.player.rotationYawHead = Freecam.mc.thePlayer.rotationYawHead;
        this.player.renderYawOffset = Freecam.mc.thePlayer.renderYawOffset;
        Freecam.mc.theWorld.addEntityToWorld(-6969, this.player);
        Freecam.mc.thePlayer.noClip = true;
    }
    
    @Override
    public void onDisable() {
        Freecam.mc.thePlayer.setPosition(this.oldX, this.oldY, this.oldZ);
        Freecam.mc.thePlayer.rotationYaw = this.oldYaw;
        Freecam.mc.thePlayer.rotationPitch = this.oldPitch;
        Freecam.mc.thePlayer.motionX = 0.0;
        Freecam.mc.thePlayer.motionY = 0.0;
        Freecam.mc.thePlayer.motionZ = 0.0;
        Freecam.mc.theWorld.removeEntity(this.player);
        this.player = null;
    }
    
    @Override
    public void onEvent(final Event e) {
        if (e instanceof EventUpdate) {
            Freecam.mc.thePlayer.noClip = true;
            Freecam.mc.thePlayer.fallDistance = 0.0f;
            Freecam.mc.thePlayer.motionX = 0.0;
            Freecam.mc.thePlayer.motionY = 0.0;
            Freecam.mc.thePlayer.motionZ = 0.0;
            MovementUtils.strafe((float)this.speed.getValue());
            if (Freecam.mc.gameSettings.keyBindJump.isKeyDown()) {
                final EntityPlayerSP thePlayer3;
                final EntityPlayerSP thePlayer = thePlayer3 = Freecam.mc.thePlayer;
                thePlayer3.motionY += 0.5;
            }
            if (Freecam.mc.gameSettings.keyBindSneak.isKeyDown()) {
                final EntityPlayerSP thePlayer4;
                final EntityPlayerSP thePlayer2 = thePlayer4 = Freecam.mc.thePlayer;
                thePlayer4.motionY -= 0.5;
            }
        }
        if (e instanceof EventPacket) {
            final EventPacket eventPacket = (EventPacket)e;
            final Packet<?> packet = eventPacket.getPacket();
            if (packet instanceof C03PacketPlayer || packet instanceof C0BPacketEntityAction) {
                eventPacket.setCancelled(true);
            }
            if (packet instanceof S08PacketPlayerPosLook) {
                this.oldX = ((S08PacketPlayerPosLook)packet).getX();
                this.oldY = ((S08PacketPlayerPosLook)packet).getY();
                this.oldZ = ((S08PacketPlayerPosLook)packet).getY();
                this.oldYaw = ((S08PacketPlayerPosLook)packet).getYaw();
                this.oldPitch = ((S08PacketPlayerPosLook)packet).getPitch();
                this.player.posX = this.oldX;
                this.player.posY = this.oldY;
                this.player.posZ = this.oldZ;
                this.player.rotationYaw = this.oldYaw;
                this.player.rotationPitch = this.oldPitch;
                eventPacket.setCancelled(true);
                Freecam.mc.getNetHandler().addToSendQueue(new C03PacketPlayer.C06PacketPlayerPosLook(this.oldX, this.oldY, this.oldZ, this.oldYaw, this.oldPitch, false));
            }
            if (packet instanceof S07PacketRespawn) {
                this.toggled = false;
            }
            if (packet instanceof S12PacketEntityVelocity) {
                final EntityOtherPlayerMP player;
                final EntityOtherPlayerMP playerMP = player = this.player;
                player.motionY += 4.0;
            }
        }
    }
}
