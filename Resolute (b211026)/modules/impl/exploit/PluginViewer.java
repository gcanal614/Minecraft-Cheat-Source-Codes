// 
// Decompiled by Procyon v0.5.36
// 

package vip.Resolute.modules.impl.exploit;

import joptsimple.internal.Strings;
import vip.Resolute.Resolute;
import java.util.Collections;
import net.minecraft.network.play.server.S3APacketTabComplete;
import vip.Resolute.events.impl.EventPacket;
import vip.Resolute.events.impl.EventMotion;
import vip.Resolute.events.Event;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C14PacketTabComplete;
import java.util.ArrayList;
import vip.Resolute.util.misc.TimerUtil;
import java.util.List;
import vip.Resolute.settings.impl.NumberSetting;
import vip.Resolute.modules.Module;

public class PluginViewer extends Module
{
    private NumberSetting timeout;
    private List<String> plugins;
    private boolean scan;
    private TimerUtil timer;
    
    public PluginViewer() {
        super("PluginViewer", 0, "Prints out server plugins", Category.EXPLOIT);
        this.timeout = new NumberSetting("Timeout", 5.0, 0.0, 10.0, 1.0);
        this.plugins = new ArrayList<String>();
        this.timer = new TimerUtil();
    }
    
    @Override
    public void onEnable() {
        super.onEnable();
        if (PluginViewer.mc.thePlayer == null) {
            return;
        }
        PluginViewer.mc.getNetHandler().sendPacketNoEvent(new C14PacketTabComplete("/"));
        this.scan = true;
        this.plugins.clear();
        this.timer.reset();
    }
    
    @Override
    public void onDisable() {
        super.onDisable();
        this.scan = false;
        this.timer.reset();
    }
    
    @Override
    public void onEvent(final Event e) {
        if (e instanceof EventMotion && e.isPre() && this.timer.hasElapsed((long)(this.timeout.getValue() * 300.0))) {
            this.timer.reset();
            this.toggle();
        }
        if (e instanceof EventPacket && ((EventPacket)e).getPacket() instanceof S3APacketTabComplete && this.scan) {
            final S3APacketTabComplete packet2 = ((EventPacket)e).getPacket();
            final String[] commands = packet2.func_149630_c();
            final String[] arrayOfString1;
            final int i = (arrayOfString1 = commands).length;
            for (byte b = 0; b < i; ++b) {
                final String s = arrayOfString1[b];
                final String[] split = s.split(":");
                if (split.length > 1) {
                    final String in = split[0].replaceAll("/", "");
                    if (!this.plugins.contains(in)) {
                        this.plugins.add(in);
                    }
                }
            }
            Collections.sort(this.plugins);
            if (this.plugins.isEmpty()) {
                Resolute.addChatMessage("No plugins found");
            }
            else {
                Resolute.addChatMessage("[n]Plugins [t]([v]" + this.plugins.size() + "[t]): [v]" + Strings.join((String[])this.plugins.toArray(new String[0]), "[t], [v]"));
            }
        }
    }
}
